<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ResilienceDecorators.MySql</name>
    </assembly>
    <members>
        <member name="T:ResilienceDecorators.MySql.ResilienceSettings">
            <summary>
            Resilience settings to use while creating resilience policies
            </summary>
        </member>
        <member name="M:ResilienceDecorators.MySql.ResilienceSettings.#ctor">
            <summary>
            Uses the default value for retry count = 5 and interval factor = 5. These defaults will
            create retries at 5s, 10s, 15, 20s, 25s which should be enough time to recover from an
            instance reboot or failover
            </summary>
        </member>
        <member name="M:ResilienceDecorators.MySql.ResilienceSettings.#ctor(System.Int32,System.Int32)">
            <summary>
            Override the defaults with custom values
            </summary>
            <param name="retryCount">How many times to retry upon initial failure?</param>
            <param name="retryIntervalFactor">
            What factor to multiply the intervals between retries by?
            </param>
        </member>
        <member name="P:ResilienceDecorators.MySql.ResilienceSettings.RetryCount">
            <summary>
            The number of retries to be executed after the initial failure.
            Default value is 5
            </summary>
        </member>
        <member name="P:ResilienceDecorators.MySql.ResilienceSettings.RetryIntervalFactor">
            <summary>
            The interval between retries (in seconds) = retryAttempt * RetryIntervalFactor.
            The higher the value of this property, the higher the delay between retries.
            Default value is 5 (i.e. retry with a delay increasing by 5 second)
            to prevent rapid retries which will likely fail
            and eliminate benefits of a retry policy
            </summary>
        </member>
        <member name="P:ResilienceDecorators.MySql.ResilienceSettings.DefaultFailoverResilienceSettings">
            <summary>
            Convenience property to call when using the default settings
            </summary>
        </member>
        <member name="T:ResilienceDecorators.MySql.RetryHelpers.RetryWrapper">
            <summary>
            Inheriting from this class and invoking its methods, will allow your MySql database
            interactions to recover from failovers.
            </summary>
        </member>
        <member name="M:ResilienceDecorators.MySql.RetryHelpers.RetryWrapper.GetConnectionString">
            <summary>
            You must override this method to return the connection string in use by the caller,
            for connection management reasons.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ResilienceDecorators.MySql.RetryHelpers.RetryWrapper.ExecuteWithSyncRetries``1(System.Func{``0},ResilienceDecorators.MySql.ResilienceSettings,System.Action{MySql.Data.MySqlClient.MySqlException,System.TimeSpan})">
            <summary>
            Synchronous retry policy that returns T
            </summary>
            <typeparam name="T"></typeparam>
            <param name="action"></param>
            <param name="customResilienceSettings"></param>
            <param name="onRetry"></param>
            <returns></returns>
        </member>
        <member name="M:ResilienceDecorators.MySql.RetryHelpers.RetryWrapper.ExecuteWithSyncRetries(System.Action,ResilienceDecorators.MySql.ResilienceSettings,System.Action{MySql.Data.MySqlClient.MySqlException,System.TimeSpan})">
            <summary>
            Synchronous retry policy of void return type
            </summary>
            <param name="action"></param>
            <param name="customResilienceSettings"></param>
            <param name="onRetry"></param>
        </member>
        <member name="M:ResilienceDecorators.MySql.RetryHelpers.RetryWrapper.ExecuteWithAsyncRetries``1(System.Func{System.Threading.Tasks.Task{``0}},ResilienceDecorators.MySql.ResilienceSettings,System.Action{MySql.Data.MySqlClient.MySqlException,System.TimeSpan})">
            <summary>
            Asynchronous retry policy that returns Task of <typeparamref name="T"/>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="action"></param>
            <param name="customResilienceSettings"></param>
            <param name="onRetry"></param>
            <param name="connv"></param>
            <returns></returns>
        </member>
        <member name="M:ResilienceDecorators.MySql.RetryHelpers.RetryWrapper.ExecuteWithAsyncRetries(System.Func{System.Threading.Tasks.Task},ResilienceDecorators.MySql.ResilienceSettings,System.Action{MySql.Data.MySqlClient.MySqlException,System.TimeSpan})">
            <summary>
            Asynchronous retry policy of Task return type
            </summary>
            <param name="action"></param>
            <param name="customResilienceSettings"></param>
            <param name="onRetry"></param>
            <returns></returns>
        </member>
        <member name="T:ResilienceDecorators.MySql.RetryPolicies.MySqlFailoverRetryPolicies">
            <summary>
            Pair of default retry policies - sync and async
            </summary>
        </member>
        <member name="M:ResilienceDecorators.MySql.RetryPolicies.MySqlFailoverRetryPolicies.DefaultSyncPolicy(ResilienceDecorators.MySql.ResilienceSettings,System.Action{MySql.Data.MySqlClient.MySqlException,System.TimeSpan})">
            <summary>
            Default sync policy
            </summary>
            <param name="resilienceSettings"></param>
            <param name="onRetry"></param>
            <returns></returns>
        </member>
        <member name="M:ResilienceDecorators.MySql.RetryPolicies.MySqlFailoverRetryPolicies.DefaultAsyncPolicy(ResilienceDecorators.MySql.ResilienceSettings,System.Action{MySql.Data.MySqlClient.MySqlException,System.TimeSpan})">
            <summary>
            Default async policy
            </summary>
            <param name="resilienceSettings"></param>
            <param name="onRetry"></param>
            <returns></returns>
        </member>
    </members>
</doc>
